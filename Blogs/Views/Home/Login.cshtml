@using Blogs.Models;
@using Blogs
@model PersonModel
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Login</title>



    <script type="text/javascript" src="~/Scripts/jquery-2.1.0.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.min.js"></script>
    <script type="text/javascript" src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            $('btnHelp').onclick = function btnHelpClick(event) {
                var message = "Author: Anthony Simmons \nWhen Creating a new user, the user must be enabled by the Admin account. For the purpose of this assignment, Admin credentials are { Admin@Blogs.com , password }. Once logged in as Admin, go to the user manager page and edit a specified user, then select Can Write checkbox to enable a user.";
                window.confirm(message);
            }
        });
        </script>

</head>
<body style="background-color:teal; width:1200px; height:900px">
    <div style="width:400px; margin:0 auto; vertical-align:central">
        <h1 style="color:silver; font-weight:bold">Blog Manager</h1>

        @Html.ActionLink("Create New User", "Create")
        

        @using (Html.BeginForm())
        {
            if (Session["userid"] == null)
            {
                @Html.ValidationSummary(false)
            }
            <table>

                <tr>
                    <!-- Html.LabelFor / EditorFor / ValidationMessageFor is the MVC way to build
                    form elements without having to worry about specific input types.  Very handy.
                    -->
                    <td style="color:silver">@Html.LabelFor(m => m.Email)</td>
                    <td style="color:silver">@Html.EditorFor(m => m.Email)</td>
                    <td style="color:silver">@Html.ValidationMessageFor(m => m.Email)</td>
                </tr>
                <tr>
                    <!-- Html.LabelFor / EditorFor / ValidationMessageFor is the MVC way to build
                    form elements without having to worry about specific input types.  Very handy.
                    -->
                    <td style="color:silver">@Html.LabelFor(m => m.Password)</td>
                    <td style="color:silver">@Html.EditorFor(m => m.Password)</td>
                    <td style="color:silver">@Html.ValidationMessageFor(m => m.Password)</td>
                </tr>
            </table>
            <input id="btn" type="submit" value="Login" style="background-color:silver" />
        }
        <button id="btnHelp" value="Help" onclick="window.confirm('Please see the readme file included with this project.')">
        Help
        </button>
    </div>
</body>
</html>
